// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "CasinoChat",
    columns: [
      {
        name: "chatId",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
    ],
  },
  {
    name: "CasinoEvent",
    columns: [
      {
        name: "time",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "userId",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "CasinoInternHistory",
    columns: [
      {
        name: "RoleName",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "userId",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "CasinoMember",
    columns: [
      {
        name: "exeJoin",
        type: "bool",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "intern",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
      {
        name: "userId",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
    ],
  },
  {
    name: "CasinoRoles",
    columns: [
      {
        name: "Priority",
        type: "int",
        notNull: true,
        unique: true,
        defaultValue:
          "nextval('bb_ue5stecusd59l75969n1kcg92s_118ole.\"CasinoRoles_Priority_seq\"'::regclass)",
      },
      {
        name: "RoleName",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "userId",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "DateWeek",
    columns: [
      {
        name: "BIZ_DD_STG_CD_NM",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "DAY_DV_CD_NM",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "DateId",
        type: "int",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "STCS_DT",
        type: "timestamp(3) without time zone",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "DiscordServer",
    columns: [
      {
        name: "GuildId",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
    ],
  },
  {
    name: "RailStnStat",
    columns: [
      {
        name: "ABRD_PRNB",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "DateId",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "EXTR_STN_CD",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "GOFF_PRNB",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "HR_UNIT_HR_DV_CD",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "ServerPref",
    columns: [
      {
        name: "prefKey",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "value",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "StnName",
    columns: [
      {
        name: "HR_UNIT_HR_DV_CD",
        type: "int",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "STN_NM",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "User",
    columns: [
      {
        name: "email",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
      },
      {
        name: "id",
        type: "int",
        notNull: true,
        unique: true,
        defaultValue:
          "nextval('bb_ue5stecusd59l75969n1kcg92s_118ole.\"User_id_seq\"'::regclass)",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
      },
    ],
  },
  {
    name: "VoteExecutor",
    columns: [
      {
        name: "ServerId",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
      {
        name: "UserId",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type CasinoChat = InferredTypes["CasinoChat"];
export type CasinoChatRecord = CasinoChat & XataRecord;

export type CasinoEvent = InferredTypes["CasinoEvent"];
export type CasinoEventRecord = CasinoEvent & XataRecord;

export type CasinoInternHistory = InferredTypes["CasinoInternHistory"];
export type CasinoInternHistoryRecord = CasinoInternHistory & XataRecord;

export type CasinoMember = InferredTypes["CasinoMember"];
export type CasinoMemberRecord = CasinoMember & XataRecord;

export type CasinoRoles = InferredTypes["CasinoRoles"];
export type CasinoRolesRecord = CasinoRoles & XataRecord;

export type DateWeek = InferredTypes["DateWeek"];
export type DateWeekRecord = DateWeek & XataRecord;

export type DiscordServer = InferredTypes["DiscordServer"];
export type DiscordServerRecord = DiscordServer & XataRecord;

export type RailStnStat = InferredTypes["RailStnStat"];
export type RailStnStatRecord = RailStnStat & XataRecord;

export type ServerPref = InferredTypes["ServerPref"];
export type ServerPrefRecord = ServerPref & XataRecord;

export type StnName = InferredTypes["StnName"];
export type StnNameRecord = StnName & XataRecord;

export type User = InferredTypes["User"];
export type UserRecord = User & XataRecord;

export type VoteExecutor = InferredTypes["VoteExecutor"];
export type VoteExecutorRecord = VoteExecutor & XataRecord;

export type DatabaseSchema = {
  CasinoChat: CasinoChatRecord;
  CasinoEvent: CasinoEventRecord;
  CasinoInternHistory: CasinoInternHistoryRecord;
  CasinoMember: CasinoMemberRecord;
  CasinoRoles: CasinoRolesRecord;
  DateWeek: DateWeekRecord;
  DiscordServer: DiscordServerRecord;
  RailStnStat: RailStnStatRecord;
  ServerPref: ServerPrefRecord;
  StnName: StnNameRecord;
  User: UserRecord;
  VoteExecutor: VoteExecutorRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Lutica_CANARD-s-workspace-118ole.us-east-1.xata.sh/db/LuticaLab2",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
